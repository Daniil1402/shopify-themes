$(function() {
    // header size
    $(document).scroll(function() {
        if ($(window).width() > 639) {
            if ($(document).scrollTop() == 0) {
                $(".header").removeClass("header-padding")
            } else if ($(document).scrollTop() > 24) {
                $(".header").addClass("header-padding")
            }
        }
    });

    // product-item
    $(".btn-product").click(function() {
        const $currentProduct = $($(this).siblings("a").find(".bottom"));
        let isOpen = $currentProduct.hasClass("active-hover")
        if(isOpen) {
            $currentProduct.fadeOut(function() {
                $currentProduct.removeClass("active-hover")
            })
        }
        else {
            $currentProduct.fadeIn(function() {
                $currentProduct.addClass("active-hover")
            })
        }
    })

    // product-template
    $('.product-slick').slick({
        dots: true,
        arrows: false,
        adaptiveHeight: true
    });

    // Cart
    $('.product-ajax-form').submit(function(e){
        e.preventDefault()
        addToCart_form($(this))
    })

    $(".cart-ajax-update").change(function() {
        updateQuantity($(this))
    })

    function productDelBtn() {
        $(".cart-ajax-delete").click(function() {
            updateQuantity($(this))
        })
    }
    productDelBtn()    

    $(".cart-ajax-reload").click(function(e) {
        e.preventDefault()
        reloadCart()
    })

    $('.cart-button').mouseenter(function(){
        openCart()
    })

    $('.cart-ajax').mouseleave(function(){
        closeCart()
    })
    
    async function openCart() {
        $('.cart-ajax').addClass('active').fadeIn(100)
        $('.cart-ajax .content-loader').html(`<div class="ring-loader"><div></div><div></div><div></div><div></div></div>`)
        $('.cart-ajax .content-loader').load('/cart?view=ajax', function(){
            let cartJson = JSON.parse($('.content-loader').find('#cartJSON').text())
            $('.cart-button span').text(cartJson.item_count)
            productDelBtn()

            $('.cart-close').click(function(e){
                e.preventDefault()
                closeCart()
            })
        })
    }

    function closeCart() {
        $('.cart-ajax').removeClass('active').fadeOut(100)
    }

    function addToCart_form($form){
        $.ajax({
            url: '/cart/add.js', 
            type: 'POST',
            data: $form.serialize(),
            dataType : "json",
            contentType: "application/x-www-form-urlencoded",
            success: function(){
                console.log("Successed!")
                openCart()
                nativeToast({
                    message: 'Added!',
                    timeout: 5000,
                    rounded: true,
                    position: 'south',
                    closeOnClick: true,
                    type: 'success'
                })
            },
            error: function(e){
                console.log("Add to cart failed ", e)
                let error = JSON.parse(e.responseText)
                if (error.status == 422){
                    nativeToast({
                        message: 'Out Of Stock!',
                        timeout: 5000,
                        rounded: true,
                        position: 'south',
                        closeOnClick: true,
                        type: 'error'
                    })
                }
            }
        })
    }

    function updateQuantity($item){
        const quantity = $item.val()
        const key = $item.data("key")

        $.ajax({
          url: '/cart/change.js', 
          type: 'POST',
          data: JSON.stringify({ quantity: quantity, id: key }),
          dataType : "json",
          contentType: "application/json",
          success: function(data){
            console.log("Successed!")
            if (quantity > 0){
              let item_quantity = data.items.filter(i=>i.key == key)[0].quantity
              if (quantity != item_quantity) {
                nativeToast({
                  message: 'Out Of Stock!',
                  timeout: 5000,
                  rounded: true,
                  position: 'south',
                  closeOnClick: true,
                  type: 'error'
                })
                $(`[data-key="${key}"]`).val(item_quantity)
              } else {
                nativeToast({
                  message: 'Quantity changed',
                  timeout: 5000,
                  rounded: true,
                  position: 'south',
                  closeOnClick: true,
                  type: 'success'
                })
                reloadCart()
              }
            } else {
              nativeToast({
                message: 'Removed',
                timeout: 5000,
                rounded: true,
                position: 'south',
                closeOnClick: true,
                type: 'success'
              })
              reloadCart()
            }
          },
          error: function(e){
            let error = JSON.parse(e.responseText)
            console.log(e)
            if (error.status == 422){
              nativeToast({
                message: 'Out Of Stock!',
                timeout: 5000,
                rounded: true,
                position: 'south',
                closeOnClick: true,
                type: 'error'
              })
            }
            else {
                nativeToast({
                    message: 'Cart page error!',
                    timeout: 5000,
                    rounded: true,
                    position: 'south',
                    closeOnClick: true,
                    type: 'error'
                })
            }
          }
        })
    }

    function reloadCart() {
        document.location.reload();
    }  
})